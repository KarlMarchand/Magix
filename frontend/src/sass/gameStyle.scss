@import "./variables.scss";

#game {
	--offValue: 0.2vmin;
	--marginHand: -1.5vw;
	--card-height: 10vw;
	--card-text-size: calc(var(--card-height) * 0.02);
	--card-width: calc(var(--card-height) / 1.5);

	width: 100vw;
	height: 100vh;
	display: grid;

	grid-template:
		"chat handOpp handOpp handOpp playerOpp"
		"deckOpp fieldOpp fieldOpp fieldOpp lifeOpp"
		"empty message message message chrono"
		"deckSelf fieldSelf fieldSelf fieldSelf lifeSelf"
		"nothing handSelf handSelf handSelf playerSelf";

	@media screen and (max-height: 900px) {
		overflow-y: auto;
	}

	@media screen and (max-width: 950px) {
		--card-height: 16vw;

		padding: 5vh 0vh 5vh 5vh;
		row-gap: 2vh;
		column-gap: 5vw;

		grid-template:
			"handOpp handOpp playerOpp"
			"fieldOpp fieldOpp playerOpp"
			"fieldOpp fieldOpp lifeOpp"
			"message message chrono"
			"fieldSelf fieldSelf lifeSelf"
			"fieldSelf fieldSelf playerSelf"
			"handSelf handSelf playerSelf";

		.deck {
			display: none;
		}
	}
}

//////////////////////////////////////////////////////////////////////////////////////////////////////

.hand {
	display: flex;
	justify-content: center;
	width: 100%;

	.game-card {
		margin: 0 var(--marginHand);
	}
}

.hand.self {
	grid-area: handSelf;

	.game-card:hover:not(.dragging) {
		.game-card-inner {
			transition-delay: 200ms;
			transform: translateY(-25vmin) scale(2);
			z-index: 5;
		}
	}

	.game-card:active:not(.opponent) {
		.game-card-inner {
			transition: none;
			transform: none !important;
		}
	}

	@for $i from 0 through 7 {
		$rotation: ($i - 7/2) / 6 * 50;
		$offset: abs(($i - 7/2) / 6 * 80);

		.game-card:nth-child(#{$i + 1}) {
			.game-card-inner {
				transform: translateY($offset * 0.15vmin) rotateZ($rotation * 1deg);
			}
		}
	}

	.game-card.self[draggable="true"] {
		cursor: grab;

		&:active {
			cursor: grabbing;
		}
	}

	.game-card.self[draggable="false"] {
		cursor: not-allowed;
	}
}

.hand.opponent {
	transform: rotateZ(180deg);
	grid-area: handOpp;

	@for $i from 0 through 7 {
		$rotation: ($i - 7/2) / 6 * 50;
		$offset: abs(($i - 7/2) / 6 * 80);

		.game-card:nth-child(#{$i + 1}) {
			.game-card-inner {
				transform: translateY($offset * 0.05vmin) rotateZ($rotation * 1deg) rotateY(180deg);
			}
		}
	}
}

//////////////////////////////////////////////////////////////////////

.field {
	border: 5px solid transparent;
	align-items: center;
	justify-items: center;
	display: grid;
	min-height: 20vh;
	grid-template: "1 2 3 4 5 6 7 8";

	@media screen and (max-width: 950px) {
		grid-template:
			"3 1 2 4"
			"7 5 6 8";
	}

	.game-card {
		transition: 0s transform;
	}

	.game-card:hover {
		z-index: 10;

		.game-card-inner {
			transform: scale(3) translateY(5vh);
			transition-delay: 500ms;

			.game-card-front {
				filter: none !important;
			}
		}
	}

	.game-card.self:hover .game-card-inner {
		transform: scale(3) translateY(-5vh);
	}

	&.opponent {
		grid-area: fieldOpp;
	}

	&.self {
		grid-area: fieldSelf;
	}
}

//////////////////////////////////////////////////////////////////////////

#chat-game {
	position: absolute;
	margin: 1vmin 0vmin;
	z-index: 6;
	top: 1vh;
	left: 1vw;
	grid-area: chat;

	button {
		display: none;
	}

	iframe {
		display: None;
		opacity: 0;
		margin: 18px 0px 0px 18px;
		width: 100%;
		height: 90%;
	}

	.toggle-icon {
		display: block;
		position: relative;
		width: fit-content;
		cursor: pointer;
	}

	.toggle-icon .saber {
		display: block;
		width: 3em;
		height: 0.2em;
		margin: 0.8em;
		border-right: 2em solid #fff;
		border-left: 0.6em solid #888;
	}

	.toggle-icon,
	.saber {
		transition: all 0.4s ease-in-out;
	}

	&.pushed {
		height: 98%;
		width: unquote("min(650px, 100vw)");
		margin: 0;

		.toggle-icon {
			transition-delay: 0.8s;
			transform: rotate(-45deg);
			top: -1%;
			left: -2%;
		}

		.saber:nth-child(2) {
			opacity: 0;
		}

		.saber:nth-of-type(1) {
			transform: translateY(1em);
			border-right-color: #e9b8b9;
			box-shadow: 0.4em 0 0.6em 0.1em rgba(205, 40, 44, 1);
		}

		.saber:nth-of-type(3) {
			transform: translateY(-1em) rotate(-90deg);
			border-right-color: #b3d3f1;
			box-shadow: 0.4em 0 0.6em 0.1em rgba(0, 119, 255, 1);
		}

		iframe {
			display: block;
			animation: fade-in 1s forwards;
			margin: 0px;
		}

		&.blue-container {
			animation: fade-in 1s forwards;
		}

		button {
			display: block;
			position: absolute;
			top: 1em;
			right: 2em;
			font-size: 100%;
		}
	}
}

//////////////////////////////////////////////////////////////////////////////////

.playerInfos {
	min-height: 200px;
	max-height: 100%;
	max-width: 20vw;
	position: relative;
	left: 100%;
	transform: translateX(-100%);
	cursor: default;
	overflow: hidden;

	.credit {
		margin: 0px auto;
		align-self: center;
		width: 100%;

		p {
			font-size: 4em;
		}
	}
}

.opponent.playerInfos {
	grid-area: playerOpp;
}

.self.playerInfos {
	grid-area: playerSelf;
}

.activated {
	animation: pulse 1.5s infinite;
}

///////////////////////////////////////////////////////////////////////////////

.deck {
	display: flex;
	position: relative;

	.game-card {
		left: 0;
		box-shadow: #333 6px 0px 1px 1px;
		padding: 0px;
	}

	span {
		position: absolute;
		top: 80%;
		left: calc(var(--card-width) / 2);
		transform: translateX(-50%);
		color: white;
		font-size: 4em;
	}

	@media screen and (max-width: 650px) {
		display: none;
	}
}

.deck.opponent {
	grid-area: deckOpp;
}

.deck.self {
	grid-area: deckSelf;
}

////////////////////////////////////////////////////////////////////////////////

.life {
	filter: drop-shadow(0 0 2rem var(--purple));
	margin: auto auto;
	position: relative;
	left: 50%;
	transform: translateX(-100%);

	div {
		background: var(--dark-blue);
		background-image: url(assets/img/horizontal-lined-bg.png);
		mask: url(assets/img/life.png) center/contain no-repeat;
		font-size: 3em;
		height: 2em;
		width: 2em;
		color: white;
		display: flex;
		justify-content: center;
		align-items: center;

		p {
			position: relative;
			top: -5%;
		}

		@media screen and (max-width: 650px) {
			font-size: 2em;
			height: 2em;
			width: 2em;
		}
	}

	&.opponent {
		grid-area: lifeOpp;
	}

	&.self {
		grid-area: lifeSelf;
	}
}

.hurt div {
	background-color: rgba(205, 40, 44, 0.5);
}

////////////////////////////////////////////////////////////////////////////

.message-slider {
	display: flex;
	padding: 0 1vw;
	align-self: center;
	align-content: center;
	justify-content: center;
	height: 5vh;
	grid-area: message;
}
